"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADD_COMMENT_FAILURE: function() { return /* binding */ ADD_COMMENT_FAILURE; },\n/* harmony export */   ADD_COMMENT_REQUEST: function() { return /* binding */ ADD_COMMENT_REQUEST; },\n/* harmony export */   ADD_COMMENT_SUCCESS: function() { return /* binding */ ADD_COMMENT_SUCCESS; },\n/* harmony export */   ADD_POST_FAILURE: function() { return /* binding */ ADD_POST_FAILURE; },\n/* harmony export */   ADD_POST_REQUEST: function() { return /* binding */ ADD_POST_REQUEST; },\n/* harmony export */   ADD_POST_SUCCESS: function() { return /* binding */ ADD_POST_SUCCESS; },\n/* harmony export */   LIKE_POST_FAILURE: function() { return /* binding */ LIKE_POST_FAILURE; },\n/* harmony export */   LIKE_POST_REQUEST: function() { return /* binding */ LIKE_POST_REQUEST; },\n/* harmony export */   LIKE_POST_SUCCESS: function() { return /* binding */ LIKE_POST_SUCCESS; },\n/* harmony export */   LOAD_POSTS_FAILURE: function() { return /* binding */ LOAD_POSTS_FAILURE; },\n/* harmony export */   LOAD_POSTS_REQUEST: function() { return /* binding */ LOAD_POSTS_REQUEST; },\n/* harmony export */   LOAD_POSTS_SUCCESS: function() { return /* binding */ LOAD_POSTS_SUCCESS; },\n/* harmony export */   REMOVE_IMAGE: function() { return /* binding */ REMOVE_IMAGE; },\n/* harmony export */   REMOVE_POST_FAILURE: function() { return /* binding */ REMOVE_POST_FAILURE; },\n/* harmony export */   REMOVE_POST_REQUEST: function() { return /* binding */ REMOVE_POST_REQUEST; },\n/* harmony export */   REMOVE_POST_SUCCESS: function() { return /* binding */ REMOVE_POST_SUCCESS; },\n/* harmony export */   RETWEET_FAILURE: function() { return /* binding */ RETWEET_FAILURE; },\n/* harmony export */   RETWEET_REQUEST: function() { return /* binding */ RETWEET_REQUEST; },\n/* harmony export */   RETWEET_SUCCESS: function() { return /* binding */ RETWEET_SUCCESS; },\n/* harmony export */   UNLIKE_POST_FAILURE: function() { return /* binding */ UNLIKE_POST_FAILURE; },\n/* harmony export */   UNLIKE_POST_REQUEST: function() { return /* binding */ UNLIKE_POST_REQUEST; },\n/* harmony export */   UNLIKE_POST_SUCCESS: function() { return /* binding */ UNLIKE_POST_SUCCESS; },\n/* harmony export */   UPLOAD_IMAGES_FAILURE: function() { return /* binding */ UPLOAD_IMAGES_FAILURE; },\n/* harmony export */   UPLOAD_IMAGES_REQUEST: function() { return /* binding */ UPLOAD_IMAGES_REQUEST; },\n/* harmony export */   UPLOAD_IMAGES_SUCCESS: function() { return /* binding */ UPLOAD_IMAGES_SUCCESS; },\n/* harmony export */   addComment: function() { return /* binding */ addComment; },\n/* harmony export */   addPost: function() { return /* binding */ addPost; },\n/* harmony export */   generateDummyPost: function() { return /* binding */ generateDummyPost; },\n/* harmony export */   initialState: function() { return /* binding */ initialState; }\n/* harmony export */ });\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.mjs\");\n/* harmony import */ var _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @faker-js/faker */ \"./node_modules/@faker-js/faker/dist/esm/index.mjs\");\n\n\n\n_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.faker.seed(123);\nconst initialState = {\n    mainPosts: [],\n    imagePaths: [],\n    hasMorePosts: true,\n    likePostLoading: false,\n    likePostDone: false,\n    likePostError: null,\n    unlikePostLoading: false,\n    unlikePostDone: false,\n    unlikePostError: null,\n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n    uploadImagesLoading: false,\n    uploadImagesDone: false,\n    uploadImagesError: null,\n    retweetLoading: false,\n    retweetDone: false,\n    retweetError: null\n};\n// eslint-disable-next-line\nconst generateDummyPost = (number)=>Array(10).fill().map(()=>({\n            id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n            User: {\n                id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                nickname: _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.faker.person.firstName()\n            },\n            content: _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.faker.lorem.paragraph(),\n            Images: [\n                {\n                    src: _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.faker.image.url()\n                }\n            ],\n            Comments: [\n                {\n                    User: {\n                        id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                        nickname: _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.faker.person.firstName()\n                    },\n                    content: _faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.faker.lorem.sentence()\n                }\n            ]\n        }));\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\nconst UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nconst UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nconst UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nconst LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nconst LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nconst LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nconst UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nconst UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nconst UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nconst LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nconst LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nconst LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nconst REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nconst REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nconst REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nconst ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nconst ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nconst ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nconst RETWEET_REQUEST = \"RETWEET_REQUEST\";\nconst RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nconst RETWEET_FAILURE = \"RETWEET_FAILURE\";\nconst REMOVE_IMAGE = \"REMOVE_IMAGE\";\nconst addPost = (data)=>({\n        type: ADD_POST_REQUEST,\n        data\n    });\nconst addComment = (data)=>({\n        type: ADD_COMMENT_REQUEST,\n        data\n    });\n// const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.content,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n// const dummyComment = (data) => ({\n//   id: shortId.generate(),\n//   content: data,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n// });\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성 지키면서)\nconst reducer = function() {\n    let state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialState, action = arguments.length > 1 ? arguments[1] : void 0;\n    return (0,immer__WEBPACK_IMPORTED_MODULE_2__.produce)(state, (draft)=>{\n        switch(action.type){\n            case RETWEET_REQUEST:\n                draft.retweetLoading = true;\n                draft.retweetDone = false;\n                draft.retweetError = null;\n                break;\n            case RETWEET_SUCCESS:\n                {\n                    draft.retweetLoading = false;\n                    draft.retweetDone = true;\n                    draft.mainPosts.unshift(action.data);\n                    break;\n                }\n            case RETWEET_FAILURE:\n                draft.retweetLoading = false;\n                draft.retweetError = action.error;\n                break;\n            case REMOVE_IMAGE:\n                draft.imagePaths = draft.imagePaths.filter((v, i)=>i !== action.data);\n                break;\n            case UPLOAD_IMAGES_REQUEST:\n                draft.uploadImagesLoading = true;\n                draft.uploadImagesDone = false;\n                draft.uploadImagesError = null;\n                break;\n            case UPLOAD_IMAGES_SUCCESS:\n                {\n                    draft.imagePaths = action.data;\n                    draft.uploadImagesLoading = false;\n                    draft.uploadImagesDone = true;\n                    break;\n                }\n            case UPLOAD_IMAGES_FAILURE:\n                draft.uploadImagesLoading = false;\n                draft.uploadImagesError = action.error;\n                break;\n            case LIKE_POST_REQUEST:\n                draft.likePostLoading = true;\n                draft.likePostDone = false;\n                draft.likePostError = null;\n                break;\n            case LIKE_POST_SUCCESS:\n                {\n                    const post = draft.mainPosts.find((y)=>y.id === action.data.PostId);\n                    post.Likers.push({\n                        id: action.data.UserId\n                    });\n                    draft.likePostLoading = false;\n                    draft.likePostDone = true;\n                    break;\n                }\n            case LIKE_POST_FAILURE:\n                draft.likePostLoading = false;\n                draft.likePostError = action.error;\n                break;\n            case UNLIKE_POST_REQUEST:\n                draft.unlikePostLoading = true;\n                draft.unlikePostDone = false;\n                draft.unlikePostError = null;\n                break;\n            case UNLIKE_POST_SUCCESS:\n                {\n                    const post = draft.mainPosts.find((y)=>y.id === action.data.PostId);\n                    // 원래는 filter가 아닌 splice로 해야한다 다른것들도 마찬가지 불변성 유지 하다 draft를 써서\n                    post.Likers = post.Likers.filter((y)=>y.id !== action.data.UserId);\n                    draft.unlikePostLoading = false;\n                    draft.unlikePostDone = true;\n                    break;\n                }\n            case UNLIKE_POST_FAILURE:\n                draft.unlikePostLoading = false;\n                draft.unlikePostError = action.error;\n                break;\n            case LOAD_POSTS_REQUEST:\n                draft.loadPostsLoading = true;\n                draft.loadPostsDone = false;\n                draft.loadPostsError = null;\n                break;\n            case LOAD_POSTS_SUCCESS:\n                draft.loadPostsLoading = false;\n                draft.loadPostsDone = true;\n                draft.mainPosts = draft.mainPosts.concat(draft.mainPosts);\n                draft.hasMorePosts = action.data.length === 10;\n                break;\n            case LOAD_POSTS_FAILURE:\n                draft.loadPostsLoading = false;\n                draft.loadPostsError = action.error;\n                break;\n            case ADD_POST_REQUEST:\n                draft.addPostLoading = true;\n                draft.addPostDone = false;\n                draft.addPostError = null;\n                break;\n            case ADD_POST_SUCCESS:\n                draft.addPostLoading = false;\n                draft.addPostDone = true;\n                draft.mainPosts.unshift(action.data);\n                draft.imagePaths = [];\n                break;\n            case ADD_POST_FAILURE:\n                draft.addPostLoading = false;\n                draft.addPostError = action.error;\n                break;\n            case REMOVE_POST_REQUEST:\n                draft.removePostLoading = true;\n                draft.removePostDone = false;\n                draft.removePostError = null;\n                break;\n            case REMOVE_POST_SUCCESS:\n                draft.removePostLoading = false;\n                draft.mainPosts = draft.mainPosts.filter((v)=>v.id !== action.data.PostId);\n                draft.removePostDone = true;\n                break;\n            case REMOVE_POST_FAILURE:\n                draft.removePostLoading = false;\n                draft.removePostError = action.error;\n                break;\n            case ADD_COMMENT_REQUEST:\n                draft.addCommentLoading = true;\n                draft.addCommentDone = false;\n                draft.addCommentError = null;\n                break;\n            case ADD_COMMENT_SUCCESS:\n                {\n                    const post = draft.mainPosts.find((y)=>y.id === action.data.PostId);\n                    post.Comments.unshift(action.data);\n                    draft.addCommentLoading = false;\n                    draft.addCommentDone = true;\n                    break;\n                // const postIndex = state.mainPosts.findIndex((y) => y.id === action.data.postId);\n                // const post = { ...state.mainPosts[postIndex] };\n                // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n                // const mainPosts = [...state.mainPosts];\n                // mainPosts[postIndex] = post;\n                // return {\n                //   ...state,\n                //   mainPosts,\n                //   addCommentLoading: false,\n                //   addCommentDone: true,\n                // };\n                }\n            case ADD_COMMENT_FAILURE:\n                draft.addCommentLoading = false;\n                draft.addCommentError = action.error;\n                break;\n            default:\n                break;\n        }\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/post.js\n"));

/***/ })

});