"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADD_COMMENT_FAILURE: function() { return /* binding */ ADD_COMMENT_FAILURE; },\n/* harmony export */   ADD_COMMENT_REQUEST: function() { return /* binding */ ADD_COMMENT_REQUEST; },\n/* harmony export */   ADD_COMMENT_SUCCESS: function() { return /* binding */ ADD_COMMENT_SUCCESS; },\n/* harmony export */   ADD_POST_FAILURE: function() { return /* binding */ ADD_POST_FAILURE; },\n/* harmony export */   ADD_POST_REQUEST: function() { return /* binding */ ADD_POST_REQUEST; },\n/* harmony export */   ADD_POST_SUCCESS: function() { return /* binding */ ADD_POST_SUCCESS; },\n/* harmony export */   REMOVE_POST_FAILURE: function() { return /* binding */ REMOVE_POST_FAILURE; },\n/* harmony export */   REMOVE_POST_REQUEST: function() { return /* binding */ REMOVE_POST_REQUEST; },\n/* harmony export */   REMOVE_POST_SUCCESS: function() { return /* binding */ REMOVE_POST_SUCCESS; },\n/* harmony export */   addComment: function() { return /* binding */ addComment; },\n/* harmony export */   addPost: function() { return /* binding */ addPost; },\n/* harmony export */   initialState: function() { return /* binding */ initialState; }\n/* harmony export */ });\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_0__);\n\nconst initialState = {\n    mainPosts: [\n        {\n            id: 1,\n            User: {\n                id: 1,\n                nickname: \"제로초\"\n            },\n            content: \"첫 번 째 게시글 #해시태그 #익스프레스\",\n            Images: [\n                {\n                    id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                    src: \"/images/드메단독1.jpg\"\n                },\n                {\n                    id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                    src: \"/images/드메단독2.jpg\"\n                },\n                {\n                    id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                    src: \"/images/드메단독3.jpg\"\n                }\n            ],\n            Comments: [\n                {\n                    id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                    User: {\n                        id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                        nickname: \"nero\"\n                    },\n                    content: \"댓글1\"\n                },\n                {\n                    id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                    User: {\n                        id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n                        nickname: \"hero\"\n                    },\n                    content: \"댓글2\"\n                }\n            ]\n        }\n    ],\n    imagePaths: [],\n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null\n};\nconst ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nconst ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nconst ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nconst REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nconst REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nconst REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nconst ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nconst ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nconst ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nconst addPost = (data)=>({\n        type: ADD_POST_REQUEST,\n        data\n    });\nconst addComment = (data)=>({\n        type: ADD_COMMENT_REQUEST,\n        data\n    });\nconst dummyPost = (data)=>({\n        id: data.id,\n        content: data.content,\n        User: {\n            id: 1,\n            nickname: \"제로초\"\n        },\n        Images: [],\n        Comments: []\n    });\nconst dummyComment = (data)=>({\n        id: shortid__WEBPACK_IMPORTED_MODULE_0___default().generate(),\n        content: data,\n        User: {\n            id: 1,\n            nickname: \"제로초\"\n        }\n    });\nconst reducer = function() {\n    let state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialState, action = arguments.length > 1 ? arguments[1] : void 0;\n    switch(action.type){\n        case ADD_POST_REQUEST:\n            return {\n                ...state,\n                addPostLoading: true,\n                addPostDone: false,\n                addPostError: null\n            };\n        case ADD_POST_SUCCESS:\n            return {\n                ...state,\n                mainPosts: [\n                    dummyPost(action.data),\n                    ...state.mainPosts\n                ],\n                addPostLoading: false,\n                addPostDone: true\n            };\n        case ADD_POST_FAILURE:\n            return {\n                ...state,\n                addPostLoading: false,\n                addPostError: action.error\n            };\n        case REMOVE_POST_REQUEST:\n            return {\n                ...state,\n                removePostLoading: true,\n                removePostDone: false,\n                removePostError: null\n            };\n        case REMOVE_POST_SUCCESS:\n            return {\n                ...state,\n                mainPosts: state.mainPosts.filter((v)=>v.id !== action.data.id),\n                removePostLoading: false,\n                removePostDone: true\n            };\n        case REMOVE_POST_FAILURE:\n            return {\n                ...state,\n                removePostLoading: false,\n                removePostError: action.error\n            };\n        case ADD_COMMENT_REQUEST:\n            return {\n                ...state,\n                addCommentLoading: true,\n                addCommentDone: false,\n                addCommentError: null\n            };\n        case ADD_COMMENT_SUCCESS:\n            {\n                const postIndex = state.mainPosts.findIndex((y)=>y.id === action.data.postId);\n                // const post = state.mainPosts[postIndex];\n                // const Comments = [dummyComment(action.data.content), ...post.Comments];\n                const post = {\n                    ...state.mainPosts[postIndex]\n                };\n                post.Comments = [\n                    dummyComment(action.data.content),\n                    ...post.Comments\n                ];\n                const mainPosts = [\n                    ...state.mainPosts\n                ];\n                // mainPosts[postIndex] = { ...post, Comments };\n                mainPosts[postIndex] = post;\n                return {\n                    ...state,\n                    mainPosts,\n                    addCommentLoading: false,\n                    addCommentDone: true\n                };\n            }\n        case ADD_COMMENT_FAILURE:\n            return {\n                ...state,\n                addCommentLoading: false,\n                addCommentError: action.error\n            };\n        default:\n            return state;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/post.js\n"));

/***/ })

});